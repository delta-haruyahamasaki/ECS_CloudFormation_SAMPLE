AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Task Definition with Task Execution Role and CloudWatch Logs Group

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Environment
        Parameters:
          - EnvPrefix
      -
        Label:
          default: TemplateBucket
        Parameters:
          - TemplateBucketName
      -
        Label:
          default: Aurora Configuration
        Parameters:
          - DBClusterIdentifier
          - DBClusterSnapshotIdentifier
          - DBInstanceIdentifier
          - DBInstanceClass
          - DBSubnetGroupName
          - VpcSecurityGroupIds
      -
        Label:
          default: Nlb Configuration
        Parameters:
          - NlbSubnets
          - TargetGroupVpcId
      -
        Label:
          default: Route53 Configuration
        Parameters:
          - HostZoneName
          - HostZoneId
      -
        Label:
          default: ECS Configuration
        Parameters:
          - ContainerDefinitionsImage
          - EcsServiceSecurityGroups
          - EcsServiceSubnets
      -
        Label:
          default: CodePipeline Configuration
        Parameters:
          - SourceS3Bucket
          - SourceS3ObjectKey
  
Parameters:
  EnvPrefix:
    Description: Select Environment
    Type: String
    AllowedValues:
      - hotfix
      - candidate
  TemplateBucketName:
    Description: S3Bucket Name for Location of file containing the template body
    Type: String
  DBClusterIdentifier:
    Description: Identifier for the restored Aurora MySQL cluster
    Type: String
    Default: Sample-Cluster
  DBClusterSnapshotIdentifier:
    Description: Identifier of the Aurora MySQL cluster snapshot to restore from
    Type: String
  DBInstanceIdentifier:
    Description: Identifier for the restored Aurora MySQL instance
    Type: String
    Default: Sample-Instance
  DBInstanceClass:
    Description: Instance class for the restored Aurora MySQL instance
    Type: String
    Default: db.t3.medium
  DBSubnetGroupName:
    Description: Name of the DB subnet group
    Type: String
    Default: default
  VpcSecurityGroupIds:
    Description: List of Security Group IDs for the database cluster and instance
    Type: List<AWS::EC2::SecurityGroup::Id>
  NlbSubnets:
    Description: Subnets for Network Load Balancer
    Type: List<AWS::EC2::Subnet::Id>
  TargetGroupVpcId:
    Description: VPC that contains the instances you want to include in your target group
    Type: String
  HostZoneName:
    Description: Route53 Host Zone Name
    Type: String
  HostZoneId:
    Description: Route53 Host Zone ID
    Type: String
  ContainerDefinitionsImage:
    Description: Image for ECS service is created
    Type: String
  EcsServiceSecurityGroups:
    Description: SecurityGroup for ECS Service
    Type: List<AWS::EC2::SecurityGroup::Id>
  EcsServiceSubnets:
    Description: Subnet for ECS Service
    Type: List<AWS::EC2::Subnet::Id>
  SourceS3Bucket:
    Description: S3Bucket Name for CodePipleLine input artifact
    Type: String
    Default: sample-input-artifact-accountid
  SourceS3ObjectKey:
    Description: ObjectKey for CodePipleLine
    Type: String
    Default: sample.zip

Resources:
# ------------------------------------------------------------#
#  Aurora/Parameter Store
# ------------------------------------------------------------#

####### Aurora #######

  AuroraDBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/Sample_CF_Aurora.yaml"
      Parameters:
        EnvPrefix: !Ref EnvPrefix
        DBClusterIdentifier: !Ref DBClusterIdentifier
        DBClusterSnapshotIdentifier: !Ref DBClusterSnapshotIdentifier
        DBInstanceIdentifier: !Ref DBInstanceIdentifier
        DBInstanceClass: !Ref DBInstanceClass
        DBSubnetGroupName: !Ref DBSubnetGroupName
        VpcSecurityGroupIds: !Join
          - ','
          - !Ref VpcSecurityGroupIds


####### Parameter Store #######

  ParameterStoreStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - AuroraDBStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/Sample_CF_SSM.yaml"
      Parameters:
        AuoraEndpoint: !GetAtt AuroraDBStack.Outputs.AuoraEndpoint


# ------------------------------------------------------------#
#  NLB/ECS
# ------------------------------------------------------------#

####### Network Load Balancer #######

  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/Sample_CF_Network.yaml"
      Parameters:
        EnvPrefix: !Ref EnvPrefix
        NlbSubnets: !Join
          - ','
          - !Ref NlbSubnets
        TargetGroupVpcId: !Ref TargetGroupVpcId
        HostZoneName: !Ref HostZoneName
        HostZoneId: !Ref HostZoneId


####### Task Definition #######

  TaskDefinitionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/Sample_CF_TaskDefinition.yaml"
      Parameters:
        EnvPrefix: !Ref EnvPrefix
        ContainerDefinitionsImage: !Ref ContainerDefinitionsImage


####### ECS Cluster #######

  ECSStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
      - TaskDefinitionStack
      - AuroraDBStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/Sample_CF_ECS.yaml"
      Parameters:
        EnvPrefix: !Ref EnvPrefix
        EcsServiceSecurityGroups: !Join 
          - ','
          - !Ref EcsServiceSecurityGroups
        EcsServiceSubnets: !Join 
          - ','
          - !Ref EcsServiceSubnets
        SampleTaskDefinition: !GetAtt TaskDefinitionStack.Outputs.SampleTaskDefinition
        SampleTargetGroupBlue: !GetAtt NetworkStack.Outputs.SampleTargetGroupBlue


# ------------------------------------------------------------#
#  CI/CD
# ------------------------------------------------------------#

####### CICD Role #######

  CICDRoleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/Sample_CF_CICD_Role.yaml"
      Parameters:
        EnvPrefix: !Ref EnvPrefix

####### Code Build #######

  CodeBuildStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CICDRoleStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/Sample_CF_CodeBuild.yaml"
      Parameters:
        EnvPrefix: !Ref EnvPrefix
        CodeBuildServiceRole: !GetAtt CICDRoleStack.Outputs.CodeBuildServiceRole

####### Code Deploy #######

  CodeDeployStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CICDRoleStack
      - ECSStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/Sample_CF_CodeDeploy.yaml"
      Parameters:
        EnvPrefix: !Ref EnvPrefix
        CodeDeployServiceRole: !GetAtt CICDRoleStack.Outputs.CodeDeployServiceRole
        LambdaRole: !GetAtt CICDRoleStack.Outputs.LambdaRole
        SampleCluster: !GetAtt ECSStack.Outputs.SampleCluster
        SampleService: !GetAtt ECSStack.Outputs.SampleService
        SampleListenerBlue: !GetAtt NetworkStack.Outputs.SampleListenerBlue
        SampleListenerGreen: !GetAtt NetworkStack.Outputs.SampleListenerGreen

####### Code Pipeline #######

  CodePipelineStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CICDRoleStack
      - ECSStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/Sample_CF_CodePipeline.yaml"
      Parameters:
        EnvPrefix: !Ref EnvPrefix
        SourceS3Bucket: !Ref SourceS3Bucket
        SourceS3ObjectKey: !Ref SourceS3ObjectKey
        CodePipelineServiceRole: !GetAtt CICDRoleStack.Outputs.CodePipelineServiceRole
        CodeBuildProject: !GetAtt CodeBuildStack.Outputs.CodeBuildProject
